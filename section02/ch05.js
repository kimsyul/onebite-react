// 원시 타입 : 값 자체로써 변수에 저장되고 복사 된다
// 값을 재할당할 경우 기존 메모리에 저장된 값은 수정되지 않고 새로운 값이 새로운 메모리 공간에 할당됨
// -> 불변값이다 (메모리 값 수정 X)

// 객체 타입 : 참조값을 통해 변수에 저장되고 복사된다
// 객체 타입은 여러 개의 값을 저장하면서 값의 갯수가 동적으로 변경되기 때문에 별도의 메모리 공간에 저장하는 것
// -> 가변값이다 (메모리 값 수정 O)

// -> 주의 사항 1 : 객체 타입은 의도치않게 값이 수정되는 상황이 발생할 수 있음 (사이드 이펙트 발생)
// => 얕은 복사 : 객체의 참조값을 복사함 / 원본 객체가 수정될 수 있어 위험함
//  -> 객체를 새로 생성하고 스프레드 문법 사용하는 것이 안전 => 깊은 복사
//  => 깊은 복사 : 새로운 객체를 생성하면서 프로퍼티만 따로 복사 함 / 원본 객체가 수정될 일이 없어 안전함

// -> 주의 사항 2 : 객체간의 비교는 기본적으로 참조값을 기준으로 이루어진다 (얕은 비교)
// 깊은 비교 : 프로퍼티를 기준으로 비교를 하려면 JSON.stringify() 자바스크립트 내장 함수 사용해서 객체를 문자열로 변환한 다음 비교하기.

// -> 주의 사항 3 : 배열과 함수도 사실 객체이다.
